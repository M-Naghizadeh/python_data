
   #[1]Index [2]Search [3]Nullable Boolean data type [4]Categorical data

   [5]logo
   (BUTTON)
     * [6]Getting started
     * [7]User Guide
     * [8]API reference
     * [9]Development
     * [10]Release notes

     * [11]GitHub
     * [12]Twitter

   ____________________

     * [13]10 minutes to pandas
     * [14]Intro to data structures
     * [15]Essential basic functionality
     * [16]IO tools (text, CSV, HDF5, …)
     * [17]Indexing and selecting data
     * [18]MultiIndex / advanced indexing
     * [19]Merge, join, concatenate and compare
     * [20]Reshaping and pivot tables
     * [21]Working with text data
     * [22]Working with missing data
     * [23]Duplicate Labels
     * [24]Categorical data
     * [25]Nullable integer data type
     * [26]Nullable Boolean data type
     * [27]Chart Visualization
     * [28]Table Visualization
     * [29]Computational tools
     * [30]Group by: split-apply-combine
     * [31]Windowing Operations
     * [32]Time series / date functionality
     * [33]Time deltas
     * [34]Options and settings
     * [35]Enhancing performance
     * [36]Scaling to large datasets
     * [37]Sparse data structures
     * [38]Frequently Asked Questions (FAQ)
     * [39]Cookbook

   On this page

     * [40]Construction
     * [41]Operations
     * [42]Scalar NA Value

Nullable integer data type[43]¶

   Note

   IntegerArray is currently experimental. Its API or implementation may
   change without warning.

   Changed in version 1.0.0: Now uses pandas.NA as the missing value
   rather than numpy.nan.

   In [44]Working with missing data, we saw that pandas primarily uses NaN
   to represent missing data. Because NaN is a float, this forces an array
   of integers with any missing values to become floating point. In some
   cases, this may not matter much. But if your integer column is, say, an
   identifier, casting to float can be problematic. Some integers cannot
   even be represented as floating point numbers.

Construction[45]¶

   pandas can represent integer data with possibly missing values using
   [46]arrays.IntegerArray. This is an [47]extension types implemented
   within pandas.
In [1]: arr = pd.array([1, 2, None], dtype=pd.Int64Dtype())

In [2]: arr
Out[2]:
<IntegerArray>
[1, 2, <NA>]
Length: 3, dtype: Int64

   Or the string alias "Int64" (note the capital "I", to differentiate
   from NumPy’s 'int64' dtype:
In [3]: pd.array([1, 2, np.nan], dtype="Int64")
Out[3]:
<IntegerArray>
[1, 2, <NA>]
Length: 3, dtype: Int64

   All NA-like values are replaced with pandas.NA.
In [4]: pd.array([1, 2, np.nan, None, pd.NA], dtype="Int64")
Out[4]:
<IntegerArray>
[1, 2, <NA>, <NA>, <NA>]
Length: 5, dtype: Int64

   This array can be stored in a [48]DataFrame or [49]Series like any
   NumPy array.
In [5]: pd.Series(arr)
Out[5]:
0       1
1       2
2    <NA>
dtype: Int64

   You can also pass the list-like object to the [50]Series constructor
   with the dtype.

   Warning

   Currently [51]pandas.array() and [52]pandas.Series() use different
   rules for dtype inference. [53]pandas.array() will infer a nullable-
   integer dtype
In [6]: pd.array([1, None])
Out[6]:
<IntegerArray>
[1, <NA>]
Length: 2, dtype: Int64

In [7]: pd.array([1, 2])
Out[7]:
<IntegerArray>
[1, 2]
Length: 2, dtype: Int64

   For backwards-compatibility, [54]Series infers these as either integer
   or float dtype
In [8]: pd.Series([1, None])
Out[8]:
0    1.0
1    NaN
dtype: float64

In [9]: pd.Series([1, 2])
Out[9]:
0    1
1    2
dtype: int64

   We recommend explicitly providing the dtype to avoid confusion.
In [10]: pd.array([1, None], dtype="Int64")
Out[10]:
<IntegerArray>
[1, <NA>]
Length: 2, dtype: Int64

In [11]: pd.Series([1, None], dtype="Int64")
Out[11]:
0       1
1    <NA>
dtype: Int64

   In the future, we may provide an option for [55]Series to infer a
   nullable-integer dtype.

Operations[56]¶

   Operations involving an integer array will behave similar to NumPy
   arrays. Missing values will be propagated, and the data will be coerced
   to another dtype if needed.
In [12]: s = pd.Series([1, 2, None], dtype="Int64")

# arithmetic
In [13]: s + 1
Out[13]:
0       2
1       3
2    <NA>
dtype: Int64

# comparison
In [14]: s == 1
Out[14]:
0     True
1    False
2     <NA>
dtype: boolean

# indexing
In [15]: s.iloc[1:3]
Out[15]:
1       2
2    <NA>
dtype: Int64

# operate with other dtypes
In [16]: s + s.iloc[1:3].astype("Int8")
Out[16]:
0    <NA>
1       4
2    <NA>
dtype: Int64

# coerce when needed
In [17]: s + 0.01
Out[17]:
0    1.01
1    2.01
2    <NA>
dtype: Float64

   These dtypes can operate as part of DataFrame.
In [18]: df = pd.DataFrame({"A": s, "B": [1, 1, 3], "C": list("aab")})

In [19]: df
Out[19]:
      A  B  C
0     1  1  a
1     2  1  a
2  <NA>  3  b

In [20]: df.dtypes
Out[20]:
A     Int64
B     int64
C    object
dtype: object

   These dtypes can be merged & reshaped & casted.
In [21]: pd.concat([df[["A"]], df[["B", "C"]]], axis=1).dtypes
Out[21]:
A     Int64
B     int64
C    object
dtype: object

In [22]: df["A"].astype(float)
Out[22]:
0    1.0
1    2.0
2    NaN
Name: A, dtype: float64

   Reduction and groupby operations such as ‘sum’ work as well.
In [23]: df.sum()
Out[23]:
A      3
B      5
C    aab
dtype: object

In [24]: df.groupby("B").A.sum()
Out[24]:
B
1    3
3    0
Name: A, dtype: Int64

Scalar NA Value[57]¶

   [58]arrays.IntegerArray uses pandas.NA as its scalar missing value.
   Slicing a single element that’s missing will return pandas.NA
In [25]: a = pd.array([1, None], dtype="Int64")

In [26]: a[1]
Out[26]: <NA>

   [59]Categorical data [60]Nullable Boolean data type

   © Copyright 2008-2021, the pandas development team.

   Created using [61]Sphinx 3.5.4.

References

   1. https://pandas.pydata.org/pandas-docs/stable/genindex.html
   2. https://pandas.pydata.org/pandas-docs/stable/search.html
   3. https://pandas.pydata.org/pandas-docs/stable/user_guide/boolean.html
   4. https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html
   5. https://pandas.pydata.org/pandas-docs/stable/index.html
   6. https://pandas.pydata.org/pandas-docs/stable/getting_started/index.html
   7. https://pandas.pydata.org/pandas-docs/stable/user_guide/index.html
   8. https://pandas.pydata.org/pandas-docs/stable/reference/index.html
   9. https://pandas.pydata.org/pandas-docs/stable/development/index.html
  10. https://pandas.pydata.org/pandas-docs/stable/whatsnew/index.html
  11. https://github.com/pandas-dev/pandas
  12. https://twitter.com/pandas_dev
  13. https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html
  14. https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html
  15. https://pandas.pydata.org/pandas-docs/stable/user_guide/basics.html
  16. https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html
  17. https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html
  18. https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html
  19. https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html
  20. https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html
  21. https://pandas.pydata.org/pandas-docs/stable/user_guide/text.html
  22. https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html
  23. https://pandas.pydata.org/pandas-docs/stable/user_guide/duplicates.html
  24. https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html
  25. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html
  26. https://pandas.pydata.org/pandas-docs/stable/user_guide/boolean.html
  27. https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html
  28. https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html
  29. https://pandas.pydata.org/pandas-docs/stable/user_guide/computation.html
  30. https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html
  31. https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html
  32. https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html
  33. https://pandas.pydata.org/pandas-docs/stable/user_guide/timedeltas.html
  34. https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html
  35. https://pandas.pydata.org/pandas-docs/stable/user_guide/enhancingperf.html
  36. https://pandas.pydata.org/pandas-docs/stable/user_guide/scale.html
  37. https://pandas.pydata.org/pandas-docs/stable/user_guide/sparse.html
  38. https://pandas.pydata.org/pandas-docs/stable/user_guide/gotchas.html
  39. https://pandas.pydata.org/pandas-docs/stable/user_guide/cookbook.html
  40. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#construction
  41. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#operations
  42. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#scalar-na-value
  43. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#nullable-integer-data-type
  44. https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html#missing-data
  45. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#construction
  46. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
  47. https://pandas.pydata.org/pandas-docs/stable/development/extending.html#extending-extension-types
  48. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html#pandas.DataFrame
  49. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html#pandas.Series
  50. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html#pandas.Series
  51. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.array.html#pandas.array
  52. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html#pandas.Series
  53. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.array.html#pandas.array
  54. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html#pandas.Series
  55. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html#pandas.Series
  56. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#operations
  57. https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html#scalar-na-value
  58. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
  59. https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html
  60. https://pandas.pydata.org/pandas-docs/stable/user_guide/boolean.html
  61. http://sphinx-doc.org/
